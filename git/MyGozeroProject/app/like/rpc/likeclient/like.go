// Code generated by goctl. DO NOT EDIT.
// Source: like.proto

package likeclient

import (
	"context"

	"miniZhihu/app/like/rpc/like"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IsThumbupRequest  = like.IsThumbupRequest
	IsThumbupResponse = like.IsThumbupResponse
	ThumbupRequest    = like.ThumbupRequest
	ThumbupResponse   = like.ThumbupResponse
	UserThumbup       = like.UserThumbup

	Like interface {
		Thumbup(ctx context.Context, in *ThumbupRequest, opts ...grpc.CallOption) (*ThumbupResponse, error)
		IsThumbup(ctx context.Context, in *IsThumbupRequest, opts ...grpc.CallOption) (*IsThumbupResponse, error)
	}

	defaultLike struct {
		cli zrpc.Client
	}
)

func NewLike(cli zrpc.Client) Like {
	return &defaultLike{
		cli: cli,
	}
}

func (m *defaultLike) Thumbup(ctx context.Context, in *ThumbupRequest, opts ...grpc.CallOption) (*ThumbupResponse, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.Thumbup(ctx, in, opts...)
}

func (m *defaultLike) IsThumbup(ctx context.Context, in *IsThumbupRequest, opts ...grpc.CallOption) (*IsThumbupResponse, error) {
	client := like.NewLikeClient(m.cli.Conn())
	return client.IsThumbup(ctx, in, opts...)
}
